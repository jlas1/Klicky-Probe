# This macro was provided by discord user Garrettwp to whom i give my thanks for sharing it with me.
# I have tweaked it a lot.
# They are based on the great Annex magprobe dockable probe macros "#Originally developed by Mental,
# modified for better use on K-series printers by RyanG and Trails", kudos to them.
# That macro as since evolved into a klipper plugin that currently is pending inclusion in klipper,
# more information here, https://github.com/Annex-Engineering/Quickdraw_Probe/tree/main/Klipper_Macros
# User richardjm revised the macro variables and added some functions, thanks a lot
# by standing on the shoulders of giants, lets see if we can see further
#
# the current home for this version is https://github.com/jlas1/Klicky-Probe
# the 1000 values below is to give an error instead of doing something wrong, hopefully, this won't be used is a printer larger than 1 meter

[gcode_macro _User_Variables]
variable_verbose:             True    # Enable verbose output
variable_debug:              False    # Enable Debug output
variable_travel_speed:         200    # how fast all other travel moves will be performed when running these macros
variable_move_accel:          1000    # how fast should the toolhead accelerate when moving
variable_dock_speed:           100    # how fast should the toolhead move when docking the probe for the final movement
variable_release_speed:        150    # how fast should the toolhead move to release the hold of the magnets after docking
variable_z_drop_speed:         100    # how fast the z will lower when moving to the z location to clear the probe

variable_safe_z:         	    25    # Minimum Z for attach/dock and homing functions
# if true it will move the bed away from the nozzle when Z is not homed
variable_enable_z_hop:        True    # set this to false for beds that fall significantly under gravity (almost to Z max)

variable_max_bed:        [120,120]	  # maximum Bed size avoids doing a probe_accuracy outside the bed

# if a separate Z endstop switch is in
# use, specify the coordinates of the switch here (Voron).
# Set to 0 to have the probe move to center of bed
variable_z_endstop:          [1000,10000]

#configure for your printer, these are dummy values
#dock location
#variable_docklocation_x:      123    # X Dock position
#variable_docklocation_y:      132    # Y Dock position
variable_dock_position:        [50,50,-128]
variable_approach_position:    [50,50,0]
variable_extract_position:     [50,50,0]
variable_safe_dockaccess:      [50,50,0]

#On attach, the moves are done to the specified location on the following order
# _MOVE_TO_APPROACH_PROBE
# _DeployKlickyDock
# _MOVE_TO_DOCK_PROBE
# _MOVE_TO_EXTRACT_PROBE
# _RetractKlickyDock
# _MOVE_TO_SAFE_DOCK

#On dock, the moves are done to the specified location on the following order
  # _MOVE_TO_SAFE_DOCK
  # _MOVE_TO_EXTRACT_PROBE
  # _DeployKlickyDock
  # _MOVE_TO_DOCK_PROBE
  # _MOVE_TO_APPROACH_PROBE
  # _RetractKlickyDock

#The following variables are used if the dock is deployed and retracted via a servo motor
variable_enable_dock_servo:  False    # Set to true if your klicky dock is servo-controlled
variable_servo_name:        'NAME'    # The name of the dock servo defined in printer.cfg under [servo]
variable_servo_deploy:         10     # This EXAMPLE is the value used to deploy the servo fully
variable_servo_retract:        11     # This EXAMPLE is the value used to retract the servo fully (initial_angle in [servo] config)
variable_servo_delay:         250     # This is a delay to wait the servo to reach the requested position, be carefull with high values

# location to park the toolhead
variable_park_toolhead:      False    # Enable toolhead parking
variable_parkposition:       [75,75,30]

variable_version:                2    # Helps users to update the necessary variables, do not update if the variables above are not updated

variable_home_backoff:          [10,10]    # how many mm to move away from the X,Y endstop after homing X
                                      # this is useful for the voron v0 to enable the toolhead to move out of the way to allow an unstricted Y homing

variable_override_homing:       'X'    # configures what axis to home first
                                      # 'X' = forces X to home first
                                      # 'Y' = forces Y to home first
                                      
variable_dock_on_zhome:       False    # docks the probe on Z Homing if not necessary (avoids hitting the bed on some printers                                      

# Do not modify below
gcode:
    {% set Mx = printer['configfile'].config["stepper_x"]["position_max"]|float %}
    {% set My = printer['configfile'].config["stepper_y"]["position_max"]|float %}
    {% set Ox = printer['configfile'].config["probe"]["x_offset"]|float %}
    {% set Oy = printer['configfile'].config["probe"]["y_offset"]|float %}
    {% set Oz = printer['configfile'].config["probe"]["z_offset"]|float %}

    # If x, y coordinates are set for z endstop, assign them
    {% if z_endstop_x != 0 or z_endstop_y != 0 %}
        SET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=z_endstop_x VALUE={ z_endstop[0] }
        SET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=z_endstop_y VALUE={ z_endstop[1] }

    # if no x, y coordinates for z endstop, assume probe is endstop and move toolhead to center of bed
    {% else %}
        SET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=z_endstop[0] VALUE={ (Mx * 0.5) - Ox }
        SET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=z_endstop[1] VALUE={ (My * 0.5) - Oy }
    {% endif %}
